% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fviz_eig.psych.R
\name{fviz_eig.psych}
\alias{fviz_eig.psych}
\title{Scree Plot Visualization for Psych Analysis}
\usage{
fviz_eig.psych(
  X,
  choice = c("variance", "eigenvalue"),
  geom = c("bar", "line"),
  barfill = "steelblue",
  barcolor = "steelblue",
  linecolor = "black",
  ncp = 10,
  addlabels = FALSE,
  hjust = 0,
  main = NULL,
  xlab = NULL,
  ylab = NULL,
  ggtheme = theme_minimal(),
  ...
)
}
\arguments{
\item{X}{An object containing eigenanalysis results with a \code{Vaccounted} component.
\code{X$Vaccounted} should be a matrix with three rows, where the first row contains
eigenvalues and the second row contains the proportion of variance explained (which will
be multiplied by 100 to obtain percentages).}

\item{choice}{A character string specifying the measure to plot. Either \code{"variance"}
(to plot the percentage of explained variance) or \code{"eigenvalue"} (to plot the raw
eigenvalues). Default is \code{c("variance", "eigenvalue")} (the first element is used).}

\item{geom}{A character vector indicating the type(s) of geometric objects to use in the plot.
Allowed values are \code{"bar"} and/or \code{"line"}. Default is \code{c("bar", "line")}.}

\item{barfill}{A color specification for the fill of bars when \code{"bar"} is used.
Default is \code{"steelblue"}.}

\item{barcolor}{A color specification for the border of bars. Default is \code{"steelblue"}.}

\item{linecolor}{A color specification for the line and points when \code{"line"} is used.
Default is \code{"black"}.}

\item{ncp}{An integer specifying the maximum number of components (dimensions) to plot.
Default is \code{10}.}

\item{addlabels}{Logical indicating whether to add numeric labels (eigenvalues or percentages)
to the plot. Default is \code{FALSE}.}

\item{hjust}{A numeric value for horizontal justification of the text labels. Default is \code{0}.}

\item{main}{A character string specifying the main title of the plot. If \code{NULL}, defaults to
\code{"Scree plot"}.}

\item{xlab}{A character string for the x-axis label. If \code{NULL}, defaults to \code{"Dimensions"}.}

\item{ylab}{A character string for the y-axis label. If \code{NULL}, it defaults to
\code{"Eigenvalue"} when \code{choice = "eigenvalue"} or \code{"Percentage of explained variances"}
when \code{choice = "variance"}.}

\item{ggtheme}{A \code{ggplot2} theme object to apply to the plot. Default is \code{theme_minimal()}.}

\item{...}{Additional arguments passed to \code{ggpubr::ggpar} for further customization.}
}
\value{
A \code{ggplot} object representing the scree plot.
}
\description{
Creates a scree plot from an object containing eigenanalysis results (typically from a
factor analysis or principal component analysis). The function plots either the eigenvalues
or the percentage of explained variance using \code{ggplot2} and allows customization via
bar and/or line geometries.
}
\details{
The function first scales the second and third rows of \code{X$Vaccounted} by 100 to convert
proportions into percentages. It then transposes the first three rows of \code{X$Vaccounted} and
limits the number of components plotted to the minimum of \code{ncp} and the total available. Based
on the \code{choice} parameter, either the eigenvalues or the percentage of explained variance is
extracted and corresponding text labels are created. The function constructs a data frame of the eigen
information and uses \code{ggplot2} to generate the plot. Depending on the values in \code{geom}, a
bar plot and/or line plot is added. Optional text labels can be added, and axis labels as well as the
plot title are set with default values if not provided. Finally, the \code{ggpubr::ggpar} function is
called to apply the specified theme and additional graphical parameters.
}
\examples{
\dontrun{
# Assume fa_result is an object from a factor analysis (e.g., from the psych package)
# with a Vaccounted component.

# Plot the percentage of explained variance using both bar and line geometries.
fviz_eig.psych(fa_result, choice = "variance", geom = c("bar", "line"))

# Plot raw eigenvalues with only a line plot, and customize the line color.
fviz_eig.psych(fa_result, choice = "eigenvalue", geom = "line", linecolor = "red")
}

}
