% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normqqplot.R
\name{normqqplot}
\alias{normqqplot}
\title{Normal Q-Q Plot Using Lattice}
\usage{
normqqplot(formula, data = NULL, ylab = "Sample quantiles", main = NULL)
}
\arguments{
\item{formula}{A formula specifying the variable(s) to plot. If a single variable is provided
(e.g., \code{~ x}), a single Q-Q plot is produced. If two variables are provided (e.g.,
\code{x ~ g}), the first variable (\code{x}) is the response variable and the second (\code{g})
is a grouping variable used for conditioning the plot.}

\item{data}{An optional data frame containing the variables referenced in \code{formula}. If not
provided, the variables are expected to exist in the global environment.}

\item{ylab}{A character string specifying the label for the y-axis. Default is \code{"Sample quantiles"}.}

\item{main}{A character string specifying the main title for the plot. Default is \code{NULL}.}
}
\value{
A \code{trellis} object (from the \code{lattice} package) representing the Q-Q plot.
}
\description{
Creates a normal quantile-quantile (Q-Q) plot to assess the normality of a variable.
The function utilizes the \code{qqmath()} function from the \code{lattice} package. If the
\code{formula} contains two variables, a conditional Q-Q plot is produced with the second
variable serving as the grouping factor.
}
\details{
The function first determines whether the \code{formula} contains one or two variables.
If two variables are provided, it evaluates both the response and grouping variables from the
supplied data frame (or the global environment if \code{data} is \code{NULL}) and creates a
conditional Q-Q plot using \code{qqmath(~ resp | gvar, ...)}. If only one variable is provided,
a standard Q-Q plot is created using \code{qqmath(~ resp, ...)}. In both cases, the plot includes
a reference line (via \code{panel.qqmathline()}) to help assess normality.
}
\examples{
\dontrun{
# Single Q-Q plot for a numeric vector 'x'
normqqplot(~ x, data = data.frame(x = rnorm(100)))

# Conditional Q-Q plot for a numeric vector 'x' grouped by factor 'g'
normqqplot(x ~ g, data = data.frame(x = rnorm(100), g = rep(letters[1:2], each = 50)))
}

}
